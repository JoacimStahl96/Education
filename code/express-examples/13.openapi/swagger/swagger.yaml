openapi: "3.0.0"
info:
  version: 1.0.0
  title: Unspecified user API for BongBong?
  description: |
    <b>html Formatting is possible</b>
    
    [markdown too](http://localhost:3000/swagger.yaml)
    
    As long as the indent isn't less than what you have
    
    ```json
    {"code": "can be formatted in markdown"}
    ```
  license:
    name: MIT
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      parameters:
        - name: userName
          in: query
          description: name of the user to filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: a list of users matching the fiter
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
      - username
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
          description: "must be unique, stored in lowercase"
    Users:
      type: array
      items: 
        $ref: "#/components/schemas/User"
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
